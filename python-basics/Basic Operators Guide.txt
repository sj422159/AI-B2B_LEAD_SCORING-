1.Which arithmetic operator is used to calculate the remainder of a division?


%[ans]


//


/


**

Correct!


2.What is the significance of // in Arithmetic Operators?


It calculates the remainder of a division.


It calculates the square of a number.


It performs standard division.


It performs floor division (integer division).[ans]

Correct!


3.Which logical operator returns True if at least one condition is True?


not


and


or[ans]

Correct!


4.Evaluate the expression

(5 > 3) or (2 < 1)

False


True[ans]

Correct!


5.What will be the output of the following?

List1 = [1, 2, 3, 4]
List2 = [2, 3, 4, 5]
List3 = List1 + List2
print(List3)

[1, 2, 3, 4, 5]


[1, 1, 3, 4, 2, 3, 4, 5]


[1, 2, 3, 4, 2, 3, 4, 5][ans]


[1, 2, 2, 3, 3, 4, 4, 5]

Correct!

6.Evaluate the expression

a = 5
a %= 3
print(a)

Error!
1.67
2[ans]
3

Correct!
7.What is the primary purpose of the walrus operator (:=) in Python?


To assign a value to a variable within an expression.[ans]

To perform bitwise AND operation.

To create a new list comprehension.

To define a lambda function.

Correct!


8.Calculate the mean of everyone's age at the party!

Alice is throwing a birthday party and wants to calculate the mean of everyone's age present in her birthday party. The age of people are stored in a list called, age_list.Calculate the average age using the arithmetic operators and store the result in a variable called avg_age.

Correct!
age_list = [10, 15, 12, 13, 14, 14]

# Using arithmetic operators calculate average age of people at alice's party!

avg_age = sum(age_list) / len(age_list)
print(avg_age)

9.Find the missing operators!

For the given values of a and b, find the correct arithmetic operators that can replace the X and Y in the expression given in the jupyter notebook, such that the value of c = 25.

Also write operator used in place of X and Y.

Correct!
a = 5
b = 3
c = (a ** b)//a
print(c)
X = '**'
Y = '//'


10.Complete the logic of the code.

The code given in the jupyter notebook is used to calculate nth fibonacci series number using recursion. You need to complete the code using the correct set of arithmetic and assignment operators.

Correct!
def Fibonacci(n):
    if n < 0:
        print("Incorrect input")
        return None  

    # Handle base cases
    elif n == 0:
        return 0
    elif n == 1 or n == 2:
        return 1

    # Recursive case
    result = 0
    result += Fibonacci(n - 1)  # Add Fibonacci(n-1) to result
    result += Fibonacci(n - 2)  # Add Fibonacci(n-2) to result
    return result


11.Calculate the Total Bill

Vidhi purchased 2 apples, 20 bananas, and 1 grape. The price for each apple is 50, each banana costs 5, and each grape costs 40. Calculate the total amount she spent and store the result in the variable total_bill.

# Prices of the fruits
apple_price = 50
banana_price = 5
grape_price = 40

# Quantities of the fruits
apples = 2
bananas = 20
grapes = 1

# Calculate total bill
total_bill = (apples * apple_price) + (bananas * banana_price) + (grapes * grape_price)

# Output the total bill
print(total_bill) 

12.Is It a Leap Year?

For the given python program to check if the year is a leap year or not, complete the code using the correct set of operators.

def leap_year(year):
    # Check if it is a leap year
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        return True
    else:
        return False


13.Check both conditions!

For a given value of X, using operators write an expression to check if the value of X is greater than 10 and is even.

Correct!
X = 16 

result = X > 10 and X % 2 == 0
print(result)



14.Which of the following expression would result in True?


(True or False) and not (False or False)[ans]


not(True or False)


(True or False) and (False or False)


(True or False) or not (False or False)[ans]

Correct!


15.Fix the logical error in the code so it calculates the remainder when 100 is divided by 7.

Correct!
result = 100 % 7 
print("The remainder is:", result)



16.Decode the Logic!

Why does the following statement output Default on being executed?
print({} or "Default")

Because {} is falsy, so Python evaluates and returns Default.[ans]

Because {} is truthy, so Python skips Default.

Because the or operator always returns the second operand.

Because Default is explicitly specified in the statement.


17.Why does the following statement output hello on being executed?
print(5 and 'hello')

Because 5 is falsy, so Python evaluates and returns hello.

Because hello is explicitly specified in the statement.

Because the and operator always returns the second operand.

Because the and operator returns the last operand when both operands are truthy.[ans]